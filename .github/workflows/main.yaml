name: Deploy Full Stack App to EC2

on:
  push:
    branches:
      - main

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  FASTAPI_DOCKER_IMAGE_NAME: seoyoung1024/speech-feedback-service-fastapi
  NODE_DOCKER_IMAGE_NAME: seoyoung1024/speech-feedback-service-node
  EC2_HOST: ${{ secrets.HOST }}
  EC2_USERNAME: ${{ secrets.USERNAME }}
  EC2_KEY: ${{ secrets.KEY }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and Push FastAPI Image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ env.FASTAPI_DOCKER_IMAGE_NAME }}:latest

      - name: Build and Push Node Image
        uses: docker/build-push-action@v5
        with:
          context: ./node
          file: ./node/Dockerfile
          push: true
          tags: ${{ env.NODE_DOCKER_IMAGE_NAME }}:latest

      - name: Copy docker-compose.yaml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yaml"
          target: "~/"  # EC2 Ìôà ÎîîÎ†âÌÜ†Î¶¨Ïóê Î≥µÏÇ¨Îê®

      - name: Deploy All Services with Docker Compose  # ‚úÖ Î≥ÄÍ≤ΩÎê®: docker run ‚Üí docker compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "--- üîÑ Pulling Latest Images ---"
            docker pull ${{ env.FASTAPI_DOCKER_IMAGE_NAME }}:latest
            docker pull ${{ env.NODE_DOCKER_IMAGE_NAME }}:latest

            echo "--- üßπ Stopping and Removing Existing Compose Services ---"
            docker compose -f ~/docker-compose.yaml down || true  # ‚úÖ ÏàòÏ†ïÎê®: Í∏∞Ï°¥ Ïª®ÌÖåÏù¥ÎÑà Ï¢ÖÎ£å

            echo "--- üöÄ Starting Services with Docker Compose ---"
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} docker compose -f ~/docker-compose.yaml up -d  # ‚úÖ ÌïµÏã¨ Î≥ÄÍ≤Ω

            echo "--- üßº Cleaning Up Unused Docker Images ---"
            docker system prune -f
